<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAoHBwkHBgoJCAkLCwoMDxkQDw4ODx4WFxIZJCAmJSMgIyIo
        LTkwKCo2KyIjMkQyNjs9QEBAJjBGS0U+Sjk/QD3/2wBDAQsLCw8NDx0QEB09KSMpPT09PT09PT09PT09
        PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT3/wAARCADbAHsDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD000lOorpucdhn50fnTsUYouKw2inYoxRcLDaXFLS4ouOw3FGK
        dilpXCw2lpaKLjsJRS4NLii47CUU7bRg0rhYYaKcRRii47DcUYp22l20XCw0CinAUuKVx2GYpcU7FGKL
        hYbilxTsUUrjsNxS4pcUuKVwsNxS0uKXFFx2G4oxT9tGKVx8o00mBT9tGKVyrDMUYp2KMU7isJijFLil
        FK4+UbijFOpaXMHKNxQBTqKLj5RMUYFLRSuOwUUtFFwsJjminUmPalcLDTRzTjijA9aVy+UbzRzS4oo5
        g5WJzS005ozRcaih1FNyaMmpuyuVDqKTNGaLhyDqKSilcTVhaKSincVhcmjPtRSU7isQGbHXikM4HfNZ
        xkY9VNOQtnoa39lYuOpoJMDUoYVSRsdjU6uT2rGUS7WJ8ikyKYDRmpsSPzRj3pm4elLuHakxqI7AowKT
        dS5NK4+VoBkUtFFITDPtS0lJupNeY7DqKTIoyKLhYYY896b5bZ+9x9Kb5oPc0u8Y++K6LMzHbKRsgdBT
        C/pIPyppMx6OPxFNRAje72HG2ozcl+Kl8h5M79v4Uq2YByGrT3ENbjY97VYAwOaUIVHajDHtmsJe8a3Q
        dKQuadtPejZUpIG7iAtTs+9GDRj3NGhNmxd1ITnp/KlHFKKVwsIAaXB9KUZpaQyoYFHY/nTfLHoKtbee
        lGz/AGRXXzGdkVtvHAOaUIasbCe1IIqVyhigDrTuO1PCcUoQVm7BcYMe1Op2wY6UBAD0qXYaY3HvSinY
        9qMUrBdDaKdRRYVxuKXFLS4pWC4lGKWinYVwJ9qTNN3Ubq35TL2iHUUzdRmjlD2iHZpcmmZNJk+tHIHt
        B+TRk0zJ9aKOQPaEmaTOKbn3pKOUPaDt4o3Cm0vFHKhe0HbvejJpuBS0coc4uTR81FJmiwc400lKaK0O
        USilooGJRS0UAJmilooASilooDUSloopAFLSUvegApM07FJigY/aPSjA9KOKK5rs7rLsJtHpS7R6VCpi
        +0SxxsfOC7mBJIG7OD6dqchkO3eqj5ecN3/wo1DlXYkCj0owPSkJCqT6DNRQXC3CExkMVba+DwD3we/W
        i7HyrsTEDHSmRtv6xspHXcO/p70BzuIKMBnAPXPHX2pvngMwZWVQwUEjqT/T3ouxcq7EuBxwKMD0pCcc
        gZPpTInLxgsrK3cEYo1HyrsSbR6UYHpRwKBRdi5ULgegpdo9BTAzBm3D5RyCP8KIWkZMyqFYn7oOcDtz
        60XYWRIFHoKNo/u0ZozTuyeVEdHFJu9j+VGaLGlheKOM0maKLAKcEEEZB7U1Qq8BcZOelKDRRYYtJgH8
        6M0ZosIDzQABx2ooosMXNGRRSZosIN1Kp4pPxNLmiwDs0Z+tJmjNFhDM0nNNzz0xS8VZYuaM0mR6/pRk
        UWAdmjNNyDRzRYB2eKKbj3NH40WAXNGfakpaAFzS0z8BRx6UWAdn3FLn6UzA9KXp2oCw7NJmk+ozRx6f
        pQKwmR2B/Kmkn3oLcZppdf4mAH1plJDsntj86Mt6D86aHU9xRvVjwwz9KB2Hce1GPQ/rSZx1b9BS5HqK
        ADj3pc+5pNw/vUoOO4NAhAfc/lTvxpCaQEf5FACnHsaOB90CkxS8CgBaXpTc+wowaAFyfUUZPqKTH0o/
        AUARnd/e/wDHaUf7o/KnYGDwKieJH+8Dx7mmUrDiyKfmAH1pBKjHAPPoDUDwRx5KIFPtVFXZrpkLEqBw
        KdjRQTNUj3YUdP42qCNQrDFSxsSxBPFIlqw75scOc+pGaXaf7xP4U4KD2pcAUE3Ex9aP1/Glx0pAOtIQ
        YNLk+35U1iQOCacOVoAPwox7UelBHSgQE+1JkeooP49aTNAz/9k=
</value>
  </data>
</root>